<h2 id="rest-api">REST API</h2>

<p>The Algolia Places REST API supports HTTPS and is available via the <code>https://places-dsn.algolia.net</code> domain (leveraging our <a href="https://www.algolia.com/dsn">Distributed Search Network</a> infrastructure).</p>

<p>In order to guarantee a very high-availability, we recommend to implement a retry strategy on the following hosts if the <code>https://places-dsn.algolia.net</code> call fails:</p>

<ul>
  <li><code>https://places-1.algolianet.com</code>,</li>
  <li>then <code>https://places-2.algolianet.com</code>,</li>
  <li>then <code>https://places-3.algolianet.com</code>.</li>
</ul>

<h3 id="endpoint">Endpoint</h3>

<p>To search using the Algolia Places REST API, you need to target the <code>/1/places/query</code> endpoint with a <code>POST</code> request.</p>

<div class="codehilite shell"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre><span class="gp">$ </span>curl -X POST <span class="s1">'https://places-dsn.algolia.net/1/places/query'</span> --data <span class="s1">'{"query": "Paris"}'</span>
</pre></td></tr></tbody></table>
</div>

<p><strong>Note:</strong> The relative path prefix <code>/1/</code> indicates that we are currently using version 1 of the API.</p>

<h3 id="authentication">Authentication</h3>

<p>If you're using the authenticated version of our API (higher rate-limits), you'll need to authenticate yourself. This is done via the following HTTP headers:</p>

<ul>
  <li><code>X-Algolia-Application-Id</code>,</li>
  <li>and <code>X-Algolia-API-Key</code>.</li>
</ul>

<div class="codehilite shell"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4</pre></td><td class="code"><pre><span class="gp">$ </span>curl -X POST <span class="s1">'https://places-dsn.algolia.net/1/places/query'</span> <span class="se">\</span>
  -H <span class="s1">'X-Algolia-Application-Id: YourApplicationId'</span> <span class="se">\</span>
  -H <span class="s1">'X-Algolia-API-Key: YourAPIKey'</span> <span class="se">\</span>
  --data <span class="s1">'{"query": "Paris"}'</span>
</pre></td></tr></tbody></table>
</div>

<h3 id="search-parameters">Search parameters</h3>

<p>Those are the available query parameters you can use to filter your search results:</p>

<!-- Indentation is on purpose for <td>s, to allow HTML inside markdown -->
<table class="api">
  <thead><tr>
    <th>Option</th>
    <th>Description</th>
  </tr></thead>
  <tbody>
    <tr>
<td>
        <div class="api-entry" id="api-options-type"><code>type</code></div>
        <p>Type: string</p>
      </td>
<td>
        <p>Restrict the search results to a specific type.</p>

        <p>Available types:</p>

        <ul>
          <li><code>city</code></li>
          <li><code>country</code></li>
          <li><code>address</code></li>
        </ul>

        <p><strong>Default</strong>: Search in all types.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-options-type"><code>hitsPerPage</code></div>
        <p>Type: number</p>
      </td>
<td>
        <p>Specifies how many results you want to retrieve per search.</p>

        <p><strong>Default</strong>: 20.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-options-language"><code>language</code></div>
        <p>Type: string</p>
      </td>
<td>
        <p>If specified, restrict the search results to a single language.
You can pass two letters country codes (<a href="https://en.wikipedia.org/wiki/ISO_3166-1#Officially_assigned_code_elements">ISO 639-1</a>).</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-options-countries"><code>countries</code></div>
        <p>Type: string</p>
      </td>
<td>
        <p>If specified, restrict the search results to a specific list of comma-separated countries. You can pass two letters country codes (<a href="https://en.wikipedia.org/wiki/ISO_3166-1#Officially_assigned_code_elements">ISO 639-1</a>).</p>

        <p><strong>Default</strong>: Search on the whole planet.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-options-aroundLatLng"><code>aroundLatLng</code></div>
        <p>Type: string</p>
      </td>
<td>
        <p>Force to <em>first</em> search around a specific latitude longitude. The option value must be provided as a string:
<code>latitude,longitude</code> like <code>12.232,23.1</code>.</p>

        <p>The default is to search around the location of the user determined via his IP address (geoip).</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-options-aroundLatLngViaIP"><code>aroundLatLngViaIP</code></div>
        <p>Type: boolean</p>
      </td>
<td>
        <p>Whether or not to <em>first</em> search around the geolocation of the user found via his IP address. This is <code>true</code> by
default.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-options-aroundRadius"><code>aroundRadius</code></div>
        <p>Type: number</p>
      </td>
<td>
        <p>Radius in meters to search around the latitude/longitutde. Otherwise a default radius is automatically computed
given the area density.</p>
      </td>
    </tr>
  </tbody>
</table>

<p>For instance, to search for <strong>cities</strong> in the <strong>US</strong> and in <strong>France</strong>, you would do:</p>

<div class="codehilite shell"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2</pre></td><td class="code"><pre><span class="gp">$ </span>curl -X POST <span class="s1">'https://places-dsn.algolia.net/1/places/query'</span> <span class="se">\</span>
  --data <span class="s1">'{"query": "Paris", "type": "city", "countries": ["us", "fr"]}'</span>
</pre></td></tr></tbody></table>
</div>

<h3 id="http-headers">HTTP headers</h3>

<p>You can use the regular <code>X-Forwarded-For</code> HTTP header to override the source IP address used to resolve the geo-location of the user. This is particularly useful when you want to use the API from your backend as if it was from your end-users locations.</p>

<div class="codehilite shell"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3</pre></td><td class="code"><pre><span class="gp">$ </span>curl -X POST <span class="s1">'https://places-dsn.algolia.net/1/places/query'</span> <span class="se">\</span>
  -H <span class="s1">'X-Forwarded-For: 1.2.3.4'</span> <span class="se">\</span>
  --data <span class="s1">'{"query": "Paris"}'</span>
</pre></td></tr></tbody></table>
</div>

<h3 id="json-answer">JSON answer</h3>

<p>The API answers is using the JSON format and looks like:</p>

<div class="codehilite javascript"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66</pre></td><td class="code"><pre><span class="p">{</span>
  <span class="s2">"hits"</span><span class="err">:</span> <span class="p">[{</span>
    <span class="s2">"objectID"</span><span class="p">:</span> <span class="s2">"145746683_7444"</span><span class="p">,</span>
    <span class="s2">"locale_names"</span><span class="p">:</span> <span class="p">{</span>
      <span class="s2">"ar"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"باريس"</span><span class="p">],</span>
      <span class="s2">"ru"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"Париж"</span><span class="p">],</span>
      <span class="s2">"fr"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"Paris"</span><span class="p">,</span> <span class="s2">"Lutèce"</span><span class="p">],</span>
      <span class="s2">"it"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"Parigi"</span><span class="p">],</span>
      <span class="s2">"default"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"Paris"</span><span class="p">],</span>
      <span class="s2">"pl"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"Paryż"</span><span class="p">],</span>
      <span class="s2">"hu"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"Párizs"</span><span class="p">],</span>
      <span class="s2">"ja"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"パリ"</span><span class="p">],</span>
      <span class="s2">"nl"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"Parijs"</span><span class="p">],</span>
      <span class="s2">"es"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"París"</span><span class="p">],</span>
      <span class="s2">"zh"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"巴黎"</span><span class="p">]</span>
    <span class="p">},</span>
    <span class="s2">"city"</span><span class="err">:</span> <span class="p">{</span>
      <span class="s2">"default"</span><span class="err">:</span> <span class="p">[</span><span class="s2">"Paris"</span><span class="p">],</span>
      <span class="c1">// ... other languages</span>
    <span class="p">},</span>
    <span class="s2">"county"</span><span class="err">:</span> <span class="p">{</span>
      <span class="s2">"default"</span><span class="err">:</span> <span class="p">[</span><span class="s2">"Paris"</span><span class="p">],</span>
      <span class="c1">// ... other languages</span>
    <span class="p">},</span>
    <span class="s2">"administrative"</span><span class="err">:</span> <span class="p">[</span><span class="s2">"Île-de-France"</span><span class="p">],</span>
    <span class="s2">"country"</span><span class="err">:</span> <span class="p">{</span>
      <span class="s2">"default"</span><span class="err">:</span> <span class="s2">"France"</span><span class="p">,</span>
      <span class="c1">// ... other languages</span>
    <span class="p">},</span>
    <span class="s2">"country_code"</span><span class="err">:</span> <span class="s2">"fr"</span><span class="p">,</span>
    <span class="s2">"postcode"</span><span class="err">:</span> <span class="p">[</span><span class="s2">"75000"</span><span class="p">],</span>
    <span class="s2">"population"</span><span class="err">:</span> <span class="mi">2243833</span><span class="p">,</span>
    <span class="s2">"_geoloc"</span><span class="err">:</span> <span class="p">{</span>
      <span class="s2">"lat"</span><span class="err">:</span> <span class="mf">48.8564</span><span class="p">,</span>
      <span class="s2">"lng"</span><span class="err">:</span> <span class="mf">2.3521</span>
    <span class="p">},</span>
    <span class="s2">"_highlightResult"</span><span class="err">:</span> <span class="p">{</span>
      <span class="s2">"locale_names"</span><span class="err">:</span> <span class="p">{</span>
        <span class="s2">"default"</span><span class="err">:</span> <span class="p">[{</span>
            <span class="s2">"value"</span><span class="p">:</span> <span class="s2">"&lt;em&gt;Paris&lt;/em&gt;"</span><span class="p">,</span>
            <span class="s2">"fullyHighlighted"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
            <span class="s2">"matchedWords"</span><span class="p">:</span> <span class="p">[</span><span class="s2">"paris"</span><span class="p">],</span>
            <span class="s2">"matchLevel"</span><span class="p">:</span> <span class="s2">"full"</span>
          <span class="p">}]</span>
          <span class="c1">// [...]</span>
      <span class="p">},</span>
      <span class="s2">"city"</span><span class="err">:</span> <span class="p">{</span>
        <span class="c1">// [...]</span>
      <span class="p">},</span>
      <span class="s2">"county"</span><span class="err">:</span> <span class="p">{</span>
        <span class="c1">// [...]</span>
      <span class="p">},</span>
      <span class="s2">"country"</span><span class="err">:</span> <span class="p">{</span>
        <span class="c1">// [...]</span>
      <span class="p">},</span>
      <span class="s2">"postcode"</span><span class="err">:</span> <span class="p">[</span>
        <span class="c1">// [...]</span>
      <span class="p">],</span>
      <span class="s2">"administrative"</span><span class="err">:</span> <span class="p">[</span>
        <span class="c1">// [...]</span>
      <span class="p">]</span>
    <span class="p">}</span>
  <span class="p">}],</span>
  <span class="s2">"nbHits"</span><span class="err">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="s2">"query"</span><span class="err">:</span> <span class="s2">"Paris"</span>
<span class="p">}</span>
</pre></td></tr></tbody></table>
</div>

<table class="api">
  <thead><tr>
    <th>Property</th>
    <th>Description</th>
  </tr></thead>
  <tbody>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-name"><code>locale_name</code></div>
      </td>
<td>
        <p>List of names of the place. If no <code>language</code> parameter is specified, retrieves all of them.</p>

        <p>Examples:</p>

        <ul>
          <li>Paris</li>
          <li>589 Howard Street</li>
        </ul>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-city"><code>city</code></div>
      </td>
<td>
        <p>List of the associated city names. If no <code>language</code> parameter is specified, retrieves all of them.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-county"><code>county</code></div>
      </td>
<td>
        <p>List of the associated county names. If no <code>language</code> parameter is specified, retrieves all of them.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-administrative"><code>administrative</code></div>
      </td>
<td>
        <p>List of associated administrative region names.</p>

        <p>Examples:</p>

        <ul>
          <li>Pays de la Loire</li>
          <li>Texas</li>
          <li>Catalunya</li>
        </ul>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-country"><code>country</code></div>
      </td>
<td>
        <p>Associated country name.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-countryCode"><code>countryCode</code></div>
      </td>
<td>
        <p>Two letters country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-1#Officially_assigned_code_elements">ISO 639-1</a>).</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-postcode"><code>postcode</code></div>
      </td>
<td>
        <p>List of associated postcodes.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-population"><code>population</code></div>
      </td>
<td>
        <p>Associated population.</p>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-latlng"><code>_geoloc</code></div>
      </td>
<td>
        <p>Associated list of latitude and longitude.</p>

        <p>Examples:</p>

        <ul>
          <li><code>[{lat: 48.797885, lng: 2.337034}]</code></li>
        </ul>
      </td>
    </tr>
    <tr>
<td>
        <div class="api-entry" id="api-suggestion-highlightResult"><code>_highlightResult</code></div>
      </td>
<td>
        <p>The associated highlighting information.</p>
      </td>
    </tr>
</tbody>
</table>

<p><strong>Note:</strong> The non-documented attributes of the JSON answer may change, don't rely on them.</p>

<h3 id="query-strategy">Query strategy</h3>

<p>The Algolia Places REST API leverages <a href="https://www.algolia.com">Algolia's Search API</a>, the <a href="https://www.openstreetmap.org/">OpenStreetMap</a> and the <a href="http://www.geonames.org/">GeoNames</a> data.</p>

<p>When you perform an Algolia Places Query:</p>

<ol>
  <li>If you don't specify any <code>aroundLatLng</code> query parameter or if your source IP address isn't geo-localized, results will come from all around the world.</li>
  <li>If you specify an <code>aroundLatLng</code> query parameter or if your source IP address is geo-localized, results will be composed by:
    <ul>
      <li>Places around you (&lt;10km),</li>
      <li>Places in your country,</li>
      <li>Popular places all around the world.</li>
    </ul>
  </li>
  <li>Specifying a <code>country</code> query parameter will override this behavior, restricting the results to come from a subset of the countries.</li>
  <li>Numerical tokens are considered as optional words.</li>
  <li>Stopwords in the middle of the query are removed from the underlying search query (performance and relevancy purposes).</li>
  <li>Popular cities will always be retrieved first.</li>
  <li>If both a <code>city</code> and an <code>address</code> are matching, the city will be retrieved first.</li>
  <li>If the <code>query</code> doesn't retrieve any results, we fallback on a degraded query strategy: all words are considered optional and we only target cities.</li>
</ol>
